datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  firstName         String?
  lastName          String?
  password          String
  role              UserRole  @default(UNVERIFIED)
  verificationToken String?
  country           String?
  dateOfBirth       DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  logs              Log[]
  posts             Post[]
}

enum UserRole {
  BLOCKED
  UNVERIFIED
  USER
  ADMIN
}

enum Permission {
  NONE
  OWN
  ALL
}

model RoleAccess {
  id        Int        @id @default(autoincrement())
  role      UserRole
  type      String
  create    Boolean    @default(false)
  read      Permission @default(NONE)
  update    Permission @default(NONE)
  delete    Permission @default(NONE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([role, type])
}

model Log {
  id        Int      @id @default(autoincrement())
  operation String?
  message   String?
  ip        String
  host      String
  userAgent String
  authorId  Int?
  author    User?    @relation(references: [id], fields: [authorId])
  referer   String?
  createdAt DateTime @default(now())
}

model Post {
  id         Int        @id @default(autoincrement())
  authorId   Int?
  author     User?      @relation(references: [id], fields: [authorId])
  name       String
  content    String?
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
